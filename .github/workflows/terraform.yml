# This is a basic workflow to help you get started with Actions

name: Insert Requests from Backstage Details into Postgres Database

# Controls when the workflow will run
#on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      agent_identifier_name:
        description: 'Agent Name'
        required: true

      components:
        description: 'Components'
        required: true


      agent_action:
        description: 'Agent Action'
        required: true

      deploy_only:
        description: 'action'
        required: false
        default: false
        type: boolean

      duration:
        description: 'Infra life in days'
        required: true

        
        

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  accept_request:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Initialize Variables
        run: |
          export UNIQUE_ID=$(uuidgen)
          export TIMESTAMP_TZ=$(date --iso-8601=seconds)
          export EXPIRY_TIME=$(date -d "+$duration days" --iso-8601=seconds)
          echo "$UNIQUE_ID"
          echo "$TIMESTAMP_TZ"
          echo "$EXPIRY_TIME"

      # Runs a set of commands using the runners shell
      - name: Make the HTTP POST request
        run: |
          curl "http://24.46.107.64:7080/REQUESTED" -X POST -H "Content-Type: application/json"  -d "{\\"id\\": \\"$UNIQUE_ID\\", \\"components\\": \\"$components\\", \\"requestedtime\\": \\"$TIMESTAMP_TZ\\", \\"expirytime\\": \\"$EXPIRY_TIME\\", \\"agent_identifier_name\\": \\"$agent_identifier_name\\"}"